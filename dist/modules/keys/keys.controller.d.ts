import { KeysService } from './keys.service';
import { CreateKeyDto } from './dto/create-key.dto';
import { UpdateKeyDto } from './dto/update-key.dto';
import { FindKeysDto } from './dto/find-keys.dto';
export declare class KeysController {
    private readonly keysService;
    constructor(keysService: KeysService);
    create(createKeyDto: CreateKeyDto): Promise<{
        id: string;
        note: string | null;
        createdAt: Date;
        updatedAt: Date;
        userId: string | null;
        userEmail: string | null;
        status: import(".prisma/client").$Enums.KeyStatus;
        orderId: string | null;
        activationCode: string;
        cost: number;
        usedAt: Date | null;
        productId: string;
    }>;
    findAll(): Promise<({
        product: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            name: string;
            gameCode: string;
            analyticsCode: string;
            slug: string;
            requirePhone: boolean;
            shortDescription: string | null;
            description: string | null;
            warrantyPolicy: string | null;
            faq: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            mainKeyword: string | null;
            secondaryKeywords: string[];
            tags: string[];
            popupEnabled: boolean;
            popupTitle: string | null;
            popupContent: string | null;
            guideUrl: string | null;
            imageUrl: string | null;
            originalPrice: number;
            importPrice: number;
            importSource: string | null;
            quantity: number;
            autoSyncQuantityWithKey: boolean;
            minPerOrder: number;
            maxPerOrder: number | null;
            autoDeliverKey: boolean;
            showMoreDescription: boolean;
            promotionEnabled: boolean;
            lowStockWarning: number | null;
            gameKeyText: string | null;
            guideText: string | null;
            expiryDays: number | null;
            allowComment: boolean;
            promotionPrice: number | null;
            promotionStartDate: Date | null;
            promotionEndDate: Date | null;
            promotionQuantity: number | null;
            categoryId: string | null;
            additionalRequirementIds: string[];
            customHeadCode: string | null;
            customBodyCode: string | null;
        };
    } & {
        id: string;
        note: string | null;
        createdAt: Date;
        updatedAt: Date;
        userId: string | null;
        userEmail: string | null;
        status: import(".prisma/client").$Enums.KeyStatus;
        orderId: string | null;
        activationCode: string;
        cost: number;
        usedAt: Date | null;
        productId: string;
    })[]>;
    findOne(id: string): Promise<{
        product: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            name: string;
            gameCode: string;
            analyticsCode: string;
            slug: string;
            requirePhone: boolean;
            shortDescription: string | null;
            description: string | null;
            warrantyPolicy: string | null;
            faq: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            mainKeyword: string | null;
            secondaryKeywords: string[];
            tags: string[];
            popupEnabled: boolean;
            popupTitle: string | null;
            popupContent: string | null;
            guideUrl: string | null;
            imageUrl: string | null;
            originalPrice: number;
            importPrice: number;
            importSource: string | null;
            quantity: number;
            autoSyncQuantityWithKey: boolean;
            minPerOrder: number;
            maxPerOrder: number | null;
            autoDeliverKey: boolean;
            showMoreDescription: boolean;
            promotionEnabled: boolean;
            lowStockWarning: number | null;
            gameKeyText: string | null;
            guideText: string | null;
            expiryDays: number | null;
            allowComment: boolean;
            promotionPrice: number | null;
            promotionStartDate: Date | null;
            promotionEndDate: Date | null;
            promotionQuantity: number | null;
            categoryId: string | null;
            additionalRequirementIds: string[];
            customHeadCode: string | null;
            customBodyCode: string | null;
        };
    } & {
        id: string;
        note: string | null;
        createdAt: Date;
        updatedAt: Date;
        userId: string | null;
        userEmail: string | null;
        status: import(".prisma/client").$Enums.KeyStatus;
        orderId: string | null;
        activationCode: string;
        cost: number;
        usedAt: Date | null;
        productId: string;
    }>;
    findByActivationCode(activationCode: string): Promise<{
        product: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            name: string;
            gameCode: string;
            analyticsCode: string;
            slug: string;
            requirePhone: boolean;
            shortDescription: string | null;
            description: string | null;
            warrantyPolicy: string | null;
            faq: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            mainKeyword: string | null;
            secondaryKeywords: string[];
            tags: string[];
            popupEnabled: boolean;
            popupTitle: string | null;
            popupContent: string | null;
            guideUrl: string | null;
            imageUrl: string | null;
            originalPrice: number;
            importPrice: number;
            importSource: string | null;
            quantity: number;
            autoSyncQuantityWithKey: boolean;
            minPerOrder: number;
            maxPerOrder: number | null;
            autoDeliverKey: boolean;
            showMoreDescription: boolean;
            promotionEnabled: boolean;
            lowStockWarning: number | null;
            gameKeyText: string | null;
            guideText: string | null;
            expiryDays: number | null;
            allowComment: boolean;
            promotionPrice: number | null;
            promotionStartDate: Date | null;
            promotionEndDate: Date | null;
            promotionQuantity: number | null;
            categoryId: string | null;
            additionalRequirementIds: string[];
            customHeadCode: string | null;
            customBodyCode: string | null;
        };
    } & {
        id: string;
        note: string | null;
        createdAt: Date;
        updatedAt: Date;
        userId: string | null;
        userEmail: string | null;
        status: import(".prisma/client").$Enums.KeyStatus;
        orderId: string | null;
        activationCode: string;
        cost: number;
        usedAt: Date | null;
        productId: string;
    }>;
    findByProductId(productId: string): Promise<({
        product: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            name: string;
            gameCode: string;
            analyticsCode: string;
            slug: string;
            requirePhone: boolean;
            shortDescription: string | null;
            description: string | null;
            warrantyPolicy: string | null;
            faq: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            mainKeyword: string | null;
            secondaryKeywords: string[];
            tags: string[];
            popupEnabled: boolean;
            popupTitle: string | null;
            popupContent: string | null;
            guideUrl: string | null;
            imageUrl: string | null;
            originalPrice: number;
            importPrice: number;
            importSource: string | null;
            quantity: number;
            autoSyncQuantityWithKey: boolean;
            minPerOrder: number;
            maxPerOrder: number | null;
            autoDeliverKey: boolean;
            showMoreDescription: boolean;
            promotionEnabled: boolean;
            lowStockWarning: number | null;
            gameKeyText: string | null;
            guideText: string | null;
            expiryDays: number | null;
            allowComment: boolean;
            promotionPrice: number | null;
            promotionStartDate: Date | null;
            promotionEndDate: Date | null;
            promotionQuantity: number | null;
            categoryId: string | null;
            additionalRequirementIds: string[];
            customHeadCode: string | null;
            customBodyCode: string | null;
        };
    } & {
        id: string;
        note: string | null;
        createdAt: Date;
        updatedAt: Date;
        userId: string | null;
        userEmail: string | null;
        status: import(".prisma/client").$Enums.KeyStatus;
        orderId: string | null;
        activationCode: string;
        cost: number;
        usedAt: Date | null;
        productId: string;
    })[]>;
    findByUserId(userId: string): Promise<({
        product: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            name: string;
            gameCode: string;
            analyticsCode: string;
            slug: string;
            requirePhone: boolean;
            shortDescription: string | null;
            description: string | null;
            warrantyPolicy: string | null;
            faq: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            mainKeyword: string | null;
            secondaryKeywords: string[];
            tags: string[];
            popupEnabled: boolean;
            popupTitle: string | null;
            popupContent: string | null;
            guideUrl: string | null;
            imageUrl: string | null;
            originalPrice: number;
            importPrice: number;
            importSource: string | null;
            quantity: number;
            autoSyncQuantityWithKey: boolean;
            minPerOrder: number;
            maxPerOrder: number | null;
            autoDeliverKey: boolean;
            showMoreDescription: boolean;
            promotionEnabled: boolean;
            lowStockWarning: number | null;
            gameKeyText: string | null;
            guideText: string | null;
            expiryDays: number | null;
            allowComment: boolean;
            promotionPrice: number | null;
            promotionStartDate: Date | null;
            promotionEndDate: Date | null;
            promotionQuantity: number | null;
            categoryId: string | null;
            additionalRequirementIds: string[];
            customHeadCode: string | null;
            customBodyCode: string | null;
        };
    } & {
        id: string;
        note: string | null;
        createdAt: Date;
        updatedAt: Date;
        userId: string | null;
        userEmail: string | null;
        status: import(".prisma/client").$Enums.KeyStatus;
        orderId: string | null;
        activationCode: string;
        cost: number;
        usedAt: Date | null;
        productId: string;
    })[]>;
    findByUserEmail(userEmail: string): Promise<({
        product: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            name: string;
            gameCode: string;
            analyticsCode: string;
            slug: string;
            requirePhone: boolean;
            shortDescription: string | null;
            description: string | null;
            warrantyPolicy: string | null;
            faq: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            mainKeyword: string | null;
            secondaryKeywords: string[];
            tags: string[];
            popupEnabled: boolean;
            popupTitle: string | null;
            popupContent: string | null;
            guideUrl: string | null;
            imageUrl: string | null;
            originalPrice: number;
            importPrice: number;
            importSource: string | null;
            quantity: number;
            autoSyncQuantityWithKey: boolean;
            minPerOrder: number;
            maxPerOrder: number | null;
            autoDeliverKey: boolean;
            showMoreDescription: boolean;
            promotionEnabled: boolean;
            lowStockWarning: number | null;
            gameKeyText: string | null;
            guideText: string | null;
            expiryDays: number | null;
            allowComment: boolean;
            promotionPrice: number | null;
            promotionStartDate: Date | null;
            promotionEndDate: Date | null;
            promotionQuantity: number | null;
            categoryId: string | null;
            additionalRequirementIds: string[];
            customHeadCode: string | null;
            customBodyCode: string | null;
        };
    } & {
        id: string;
        note: string | null;
        createdAt: Date;
        updatedAt: Date;
        userId: string | null;
        userEmail: string | null;
        status: import(".prisma/client").$Enums.KeyStatus;
        orderId: string | null;
        activationCode: string;
        cost: number;
        usedAt: Date | null;
        productId: string;
    })[]>;
    findByOrderId(orderId: string): Promise<({
        product: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            name: string;
            gameCode: string;
            analyticsCode: string;
            slug: string;
            requirePhone: boolean;
            shortDescription: string | null;
            description: string | null;
            warrantyPolicy: string | null;
            faq: string | null;
            metaTitle: string | null;
            metaDescription: string | null;
            mainKeyword: string | null;
            secondaryKeywords: string[];
            tags: string[];
            popupEnabled: boolean;
            popupTitle: string | null;
            popupContent: string | null;
            guideUrl: string | null;
            imageUrl: string | null;
            originalPrice: number;
            importPrice: number;
            importSource: string | null;
            quantity: number;
            autoSyncQuantityWithKey: boolean;
            minPerOrder: number;
            maxPerOrder: number | null;
            autoDeliverKey: boolean;
            showMoreDescription: boolean;
            promotionEnabled: boolean;
            lowStockWarning: number | null;
            gameKeyText: string | null;
            guideText: string | null;
            expiryDays: number | null;
            allowComment: boolean;
            promotionPrice: number | null;
            promotionStartDate: Date | null;
            promotionEndDate: Date | null;
            promotionQuantity: number | null;
            categoryId: string | null;
            additionalRequirementIds: string[];
            customHeadCode: string | null;
            customBodyCode: string | null;
        };
    } & {
        id: string;
        note: string | null;
        createdAt: Date;
        updatedAt: Date;
        userId: string | null;
        userEmail: string | null;
        status: import(".prisma/client").$Enums.KeyStatus;
        orderId: string | null;
        activationCode: string;
        cost: number;
        usedAt: Date | null;
        productId: string;
    })[]>;
    search(findKeysDto: FindKeysDto): Promise<{
        data: ({
            product: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                name: string;
                gameCode: string;
                analyticsCode: string;
                slug: string;
                requirePhone: boolean;
                shortDescription: string | null;
                description: string | null;
                warrantyPolicy: string | null;
                faq: string | null;
                metaTitle: string | null;
                metaDescription: string | null;
                mainKeyword: string | null;
                secondaryKeywords: string[];
                tags: string[];
                popupEnabled: boolean;
                popupTitle: string | null;
                popupContent: string | null;
                guideUrl: string | null;
                imageUrl: string | null;
                originalPrice: number;
                importPrice: number;
                importSource: string | null;
                quantity: number;
                autoSyncQuantityWithKey: boolean;
                minPerOrder: number;
                maxPerOrder: number | null;
                autoDeliverKey: boolean;
                showMoreDescription: boolean;
                promotionEnabled: boolean;
                lowStockWarning: number | null;
                gameKeyText: string | null;
                guideText: string | null;
                expiryDays: number | null;
                allowComment: boolean;
                promotionPrice: number | null;
                promotionStartDate: Date | null;
                promotionEndDate: Date | null;
                promotionQuantity: number | null;
                categoryId: string | null;
                additionalRequirementIds: string[];
                customHeadCode: string | null;
                customBodyCode: string | null;
            };
        } & {
            id: string;
            note: string | null;
            createdAt: Date;
            updatedAt: Date;
            userId: string | null;
            userEmail: string | null;
            status: import(".prisma/client").$Enums.KeyStatus;
            orderId: string | null;
            activationCode: string;
            cost: number;
            usedAt: Date | null;
            productId: string;
        })[];
        meta: {
            total: number;
            page: number;
            limit: number;
            totalPages: number;
        };
    }>;
    update(id: string, updateKeyDto: UpdateKeyDto): Promise<{
        id: string;
        note: string | null;
        createdAt: Date;
        updatedAt: Date;
        userId: string | null;
        userEmail: string | null;
        status: import(".prisma/client").$Enums.KeyStatus;
        orderId: string | null;
        activationCode: string;
        cost: number;
        usedAt: Date | null;
        productId: string;
    }>;
    remove(id: string): Promise<{
        id: string;
        note: string | null;
        createdAt: Date;
        updatedAt: Date;
        userId: string | null;
        userEmail: string | null;
        status: import(".prisma/client").$Enums.KeyStatus;
        orderId: string | null;
        activationCode: string;
        cost: number;
        usedAt: Date | null;
        productId: string;
    }>;
}
