import { PrismaService } from '../../prisma/prisma.service';
import { CreateProductDto } from './dto/create-product.dto';
import { UpdateProductDto } from './dto/update-product.dto';
import { FindProductsDto } from './dto/find-products.dto';
import { AdminFindProductsDto } from './dto/admin-find-products.dto';
import { Prisma } from '@prisma/client';
export declare class ProductsService {
    private readonly prisma;
    private readonly logger;
    constructor(prisma: PrismaService);
    private generateSlug;
    private ensureUniqueId;
    create(createProductDto: CreateProductDto): Promise<Prisma.ProductGetPayload<{}>>;
    findAll(query: FindProductsDto): Promise<{
        data: {
            id: string;
            name: string;
            slug: string;
            description: string | null;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ProductStatus;
            additionalRequirementIds: string[];
            allowComment: boolean;
            analyticsCode: string;
            autoDeliverKey: boolean;
            autoSyncQuantityWithKey: boolean;
            categoryId: string | null;
            customBodyCode: string | null;
            customHeadCode: string | null;
            expiryDays: number | null;
            faq: string | null;
            gameCode: string;
            gameKeyText: string | null;
            guideText: string | null;
            guideUrl: string | null;
            imageUrl: string | null;
            importPrice: number;
            importSource: string | null;
            lowStockWarning: number | null;
            mainKeyword: string | null;
            maxPerOrder: number | null;
            metaDescription: string | null;
            metaTitle: string | null;
            minPerOrder: number;
            originalPrice: number;
            popupContent: string | null;
            popupEnabled: boolean;
            popupTitle: string | null;
            promotionEnabled: boolean;
            promotionEndDate: Date | null;
            promotionPrice: number | null;
            promotionQuantity: number | null;
            promotionStartDate: Date | null;
            quantity: number;
            requirePhone: boolean;
            secondaryKeywords: string[];
            shortDescription: string | null;
            showMoreDescription: boolean;
            tags: string[];
            warrantyPolicy: string | null;
        }[];
        meta: {
            total: number;
            page: number;
            limit: number;
            totalPages: number;
        };
    }>;
    findOne(id: string): Promise<{
        Product_A: {
            id: string;
            name: string;
        }[];
    } & {
        id: string;
        name: string;
        slug: string;
        description: string | null;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.ProductStatus;
        additionalRequirementIds: string[];
        allowComment: boolean;
        analyticsCode: string;
        autoDeliverKey: boolean;
        autoSyncQuantityWithKey: boolean;
        categoryId: string | null;
        customBodyCode: string | null;
        customHeadCode: string | null;
        expiryDays: number | null;
        faq: string | null;
        gameCode: string;
        gameKeyText: string | null;
        guideText: string | null;
        guideUrl: string | null;
        imageUrl: string | null;
        importPrice: number;
        importSource: string | null;
        lowStockWarning: number | null;
        mainKeyword: string | null;
        maxPerOrder: number | null;
        metaDescription: string | null;
        metaTitle: string | null;
        minPerOrder: number;
        originalPrice: number;
        popupContent: string | null;
        popupEnabled: boolean;
        popupTitle: string | null;
        promotionEnabled: boolean;
        promotionEndDate: Date | null;
        promotionPrice: number | null;
        promotionQuantity: number | null;
        promotionStartDate: Date | null;
        quantity: number;
        requirePhone: boolean;
        secondaryKeywords: string[];
        shortDescription: string | null;
        showMoreDescription: boolean;
        tags: string[];
        warrantyPolicy: string | null;
    }>;
    findBySlug(slug: string): Promise<{
        Product_A: {
            id: string;
            name: string;
        }[];
    } & {
        id: string;
        name: string;
        slug: string;
        description: string | null;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.ProductStatus;
        additionalRequirementIds: string[];
        allowComment: boolean;
        analyticsCode: string;
        autoDeliverKey: boolean;
        autoSyncQuantityWithKey: boolean;
        categoryId: string | null;
        customBodyCode: string | null;
        customHeadCode: string | null;
        expiryDays: number | null;
        faq: string | null;
        gameCode: string;
        gameKeyText: string | null;
        guideText: string | null;
        guideUrl: string | null;
        imageUrl: string | null;
        importPrice: number;
        importSource: string | null;
        lowStockWarning: number | null;
        mainKeyword: string | null;
        maxPerOrder: number | null;
        metaDescription: string | null;
        metaTitle: string | null;
        minPerOrder: number;
        originalPrice: number;
        popupContent: string | null;
        popupEnabled: boolean;
        popupTitle: string | null;
        promotionEnabled: boolean;
        promotionEndDate: Date | null;
        promotionPrice: number | null;
        promotionQuantity: number | null;
        promotionStartDate: Date | null;
        quantity: number;
        requirePhone: boolean;
        secondaryKeywords: string[];
        shortDescription: string | null;
        showMoreDescription: boolean;
        tags: string[];
        warrantyPolicy: string | null;
    }>;
    update(id: string, updateProductDto: UpdateProductDto): Promise<Prisma.ProductGetPayload<{}>>;
    remove(id: string): Promise<Prisma.ProductGetPayload<{}>>;
    findByGameCode(gameCode: string): Promise<{
        id: string;
        name: string;
        slug: string;
        description: string | null;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.ProductStatus;
        additionalRequirementIds: string[];
        allowComment: boolean;
        analyticsCode: string;
        autoDeliverKey: boolean;
        autoSyncQuantityWithKey: boolean;
        categoryId: string | null;
        customBodyCode: string | null;
        customHeadCode: string | null;
        expiryDays: number | null;
        faq: string | null;
        gameCode: string;
        gameKeyText: string | null;
        guideText: string | null;
        guideUrl: string | null;
        imageUrl: string | null;
        importPrice: number;
        importSource: string | null;
        lowStockWarning: number | null;
        mainKeyword: string | null;
        maxPerOrder: number | null;
        metaDescription: string | null;
        metaTitle: string | null;
        minPerOrder: number;
        originalPrice: number;
        popupContent: string | null;
        popupEnabled: boolean;
        popupTitle: string | null;
        promotionEnabled: boolean;
        promotionEndDate: Date | null;
        promotionPrice: number | null;
        promotionQuantity: number | null;
        promotionStartDate: Date | null;
        quantity: number;
        requirePhone: boolean;
        secondaryKeywords: string[];
        shortDescription: string | null;
        showMoreDescription: boolean;
        tags: string[];
        warrantyPolicy: string | null;
    }>;
    search(query: AdminFindProductsDto): Promise<{
        data: ({
            category: {
                name: string;
            };
        } & {
            id: string;
            name: string;
            slug: string;
            description: string | null;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ProductStatus;
            additionalRequirementIds: string[];
            allowComment: boolean;
            analyticsCode: string;
            autoDeliverKey: boolean;
            autoSyncQuantityWithKey: boolean;
            categoryId: string | null;
            customBodyCode: string | null;
            customHeadCode: string | null;
            expiryDays: number | null;
            faq: string | null;
            gameCode: string;
            gameKeyText: string | null;
            guideText: string | null;
            guideUrl: string | null;
            imageUrl: string | null;
            importPrice: number;
            importSource: string | null;
            lowStockWarning: number | null;
            mainKeyword: string | null;
            maxPerOrder: number | null;
            metaDescription: string | null;
            metaTitle: string | null;
            minPerOrder: number;
            originalPrice: number;
            popupContent: string | null;
            popupEnabled: boolean;
            popupTitle: string | null;
            promotionEnabled: boolean;
            promotionEndDate: Date | null;
            promotionPrice: number | null;
            promotionQuantity: number | null;
            promotionStartDate: Date | null;
            quantity: number;
            requirePhone: boolean;
            secondaryKeywords: string[];
            shortDescription: string | null;
            showMoreDescription: boolean;
            tags: string[];
            warrantyPolicy: string | null;
        })[];
        meta: {
            total: number;
            page: number;
            limit: number;
            totalPages: number;
        };
    }>;
}
